#!/bin/sh
# inspired by synology script in couchpotato dir

# Output of CouchPotato.py --help
#
#  -h, --help            show this help message and exit
#  --data_dir DATA_DIR   Absolute or ~/ path of the data dir
#  --config_file CONFIG_FILE
#                        Absolute or ~/ path of the settings file (default
#                        DATA_DIR/settings.conf)
#  --debug               Debug mode
#  --console_log         Log to console
#  --quiet               No console logging
#  --daemon              Daemonize the app
#  --pid_file PID_FILE   Path to pidfile needed for daemon

# Package
PACKAGE="couchpotato"
DNAME="CouchPotato"

# Others
PKG_DIR="/shares/Volume_1/Nas_Prog/${PACKAGE}"
INSTALL_DIR="${PKG_DIR}/CouchPotatoServer"
PYTHON_DIR="/opt/bin"
PATH="${INSTALL_DIR}/bin:${INSTALL_DIR}/env/bin:/opt/bin:/opt/sbin:/usr/local/bin:/bin:/usr/bin:/usr/syno/bin"
RUNAS="couchpotato"
PYTHON="${PYTHON_DIR}/python3"
COUCHPOTATO="${INSTALL_DIR}/CouchPotato.py"
CFG_FILE="${PKG_DIR}/settings.conf"
PID_FILE="${PKG_DIR}/couchpotato.pid"
LOG_FILE="${PKG_DIR}/logs/CouchPotato.log"


start_daemon ()
{
    if [ 1 ]; then
        PATH=${PATH} ${PYTHON} ${COUCHPOTATO} --data_dir ${INSTALL_DIR} --daemon --pid_file ${PID_FILE} --config ${CFG_FILE}
    else
        # TODO: create couchpotato user
        su ${RUNAS} -c "PATH=${PATH} ${PYTHON} ${COUCHPOTATO} --daemon --pid_file ${PID_FILE} --config ${CFG_FILE}"
    fi
}

stop_daemon()
{
    kill $(cat ${PID_FILE})
    wait_for_status 1 20
    rm -f ${PID_FILE}
}

daemon_status()
{
    if [ -f ${PID_FILE} ] && [ -d /proc/$(cat ${PID_FILE}) ]; then
         return 0
    fi
    return 1
}

wait_for_status()
{
    counter=$2
    while [ "${counter}" -gt 0 ]; do
                daemon_status
        [ $? -eq "$1" ] && break
                counter=`expr "$counter" - 1`
        sleep 1
    done
}

case $1 in
    start)
        if daemon_status; then
                        echo ${DNAME} is already running
        else
                        echo Starting ${DNAME} ...
            start_daemon
        fi
        ;;
    stop)
        if daemon_status; then
                        echo Stopping ${DNAME} ...
            stop_daemon
        else
                        echo ${DNAME} is not running
        fi
        ;;
    status)
        if daemon_status; then
                        echo ${DNAME} is running
            exit 0
        else
                        echo ${DNAME} is not running
            exit 1
        fi
        ;;
    log)
        echo ${LOG_FILE}
        ;;
    *)
        exit 1
        ;;
esac
